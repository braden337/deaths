# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches:
      - master
    paths:
      - 'src/**'
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - '.github/workflows/deploy.yml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: true

      - name: Format code
        run: pnpm format

      - name: See if any code changed
        id: checkFiles
        run: echo ::set-output name=changed::$(git status --porcelain | wc -l)

      - name: Push changed code
        if: steps.checkFiles.outputs.changed > 0
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          files_changed=`git diff --stat | grep -o '[0-9]\+ files\?'`
          git add .
          git commit -m "formatted $files_changed"
          git push

      - name: Build dist folder
        run: pnpm build

      - name: Publish dist to surge.sh
        uses: dswistowski/surge-sh-action@v1.0.1
        with:
          domain: 'deaths.surge.sh'
          project: 'dist'
          login: ${{ secrets.surge_login }}
          token: ${{ secrets.surge_token }}
